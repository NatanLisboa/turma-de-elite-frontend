# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: lts/*
        cache: 'npm'
    - run: npm ci
    - name: Install Firebase CLI
      run: curl -sL https://firebase.tools | bash
    - name: Install Angular CLI
      run: npm install -g @angular/cli
    - name: Install OS packages
      run: sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    - uses: bahmutov/npm-install@v1
      env:
        CYPRESS_INSTALL_BINARY: 0
    # confirm there is no Cypress installed
    - run: npx cypress cache path
    # should return empty list of installed versions
    - run: npx cypress cache list
    # restore / cache the binary ourselves on Linux
    # see https://github.com/actions/cache
    - name: Cache Cypress
      id: cache-cypress
      uses: actions/cache@v1
      with:
        path: ~/.cache/Cypress
        key: cypress-cache-v2-${{ runner.os }}-${{ hashFiles('**/package.json') }}
    # now let's install Cypress binary
    - run: npx cypress install
    - run: npx cypress cache list
    - name: Run tests
      run: firebase emulators:exec --only auth --project turma-de-elite-app './run_tests.sh'
    - name: Build application
      run: ng build --prod
    - name: Deploy on Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      if: github.ref == 'refs/heads/release'
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TURMA_DE_ELITE_APP}}"
        channelId: live
        projectId: turma-de-elite-app
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
